sd(survey_data$score_percentage, na.rm = TRUE),
sum(survey_data$gender == 1, na.rm = TRUE),
sum(survey_data$gender == 2, na.rm = TRUE),
sum(respondents) - sum(survey_data$gender == 1, na.rm = TRUE) -
sum(survey_data$gender == 2, na.rm = TRUE)
)
score_percentages_means_sds <- paste(round(c(score_percentages_means_sorted[,2],mean(survey_data$score_percentage, na.rm = TRUE)), 2),
"\u00B1",
round(c(score_percentages_sds_sorted[,2],sd(survey_data$score_percentage, na.rm = TRUE)), 2)) # paste means +/- sds after rounding to 2 digits
descriptive_df_processed <- descriptive_df[,-c(3,4)] # percentage means and sds converted to char and combined as mean +- sd
descriptive_df_processed$means_and_sds <- score_percentages_means_sds
descriptive_df_processed$response_rate <- round(descriptive_df_processed$response_rate, 2)
rownames(descriptive_df_processed) <- c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023", "Totals")
descriptive_tbl <- as_tibble(cbind(nms = names(descriptive_df_processed), t(descriptive_df_processed))) # transpose and convert to tibble object
row_names <- c("Respondents [n]", "Response rate [%]", "Male", "Female", "Non-binary or refused to disclose", "Mean percentage of correct anwers [%] \u00B1 standard deviation") # expressive row names esp. for gender options
descriptive_tbl$nms = row_names # fill first column in descriptive_tbl with row names
descriptive_tbl_gt <- gt(descriptive_tbl, rowname_col = "nms") # create gt object with $nms as row names
indented_rows <- c("Male", "Female", "Non-binary or refused to disclose") # define rows to be indented (gender rows)
descriptive_tbl_gt <- tab_row_group(descriptive_tbl_gt, label = "Gender",  rows = indented_rows) # create gt_tbl object, label Gender rows for grouping and indenting
descriptive_tbl_gt <- tab_stub_indent(descriptive_tbl_gt, rows= indented_rows, indent = 3) # indent Gender rows
descriptive_tbl_gt <- row_group_order(descriptive_tbl_gt, groups = c(NA, "Gender")) # reorder groups with Gender being on the bottom
tab_header(descriptive_tbl_gt, "Subject characteristics")
descriptive_tbl_gt <- tab_style( # make column total in bold
descriptive_tbl_gt,
style = cell_text(weight = "bold"),
locations = cells_body(columns = Totals)
)
descriptive_tbl_gt <- tab_style( # make column name "Totals" in bold as well
descriptive_tbl_gt,
style = cell_text(weight = "bold"),
locations = cells_column_labels(columns = Totals)
)
vector_of_methods <- c("used_script_digital", "used_script_physical", "used_textbook", "used_guideline",
"used_anki_institute", "used_anki_custom") # declare variables for line graph
#options ignored: moodle quiz, moodle task, other
subset_of_interest <- survey_data[c("group", vector_of_methods)]
df_used_materials <- as.data.frame(matrix(nrow = length(groups), ncol = length(vector_of_methods)))
colnames(df_used_materials) <- vector_of_methods
rownames(df_used_materials) <- groups # creates df with columns for used studying methods and rows for groups
for (i in 1:length(vector_of_methods)){ # fill df with shares of material used by group
method <- vector_of_methods[i]
share_used_method <- aggregate(vector_of_methods[i] ~ groups, data=subset_of_interest, mean, na.rm = TRUE) # gives share of students who used physical scripts per group and in total
share_used_method <- share_used_method[match(groups, share_used_method$group),] # sort by group
df_used_materials[,i] <- share_used_method
}
groups
i <- 1
method <- vector_of_methods[i]
method
share_used_method <- aggregate(vector_of_methods[i] ~ groups, data=subset_of_interest, mean, na.rm = TRUE) # gives share of students who used physical scripts per group and in total
group
variables_of_interest <- c("group", "used_script_digital", "used_script_physical", "used_textbook", "used_guideline",
"used_anki_institute", "used_anki_custom") # declare variables for line graph
#options ignored: moodle quiz, moodle task, other
subset_of_interest <- survey_data[variables_of_interest]
share_used_script_digital <- aggregate(used_script_digital ~ group, data=subset_of_interest, mean, na.rm = TRUE)[
match(groups, share_used_script_digital$group),
] # gives share of students who used physical scripts per group and in total
for (i in 1:length(vector_of_methods)){ # fill df with shares of material used by group
method <- vector_of_methods[i]
share_used_method <- aggregate(vector_of_methods[i] ~ group, data=subset_of_interest, mean, na.rm = TRUE) # gives share of students who used physical scripts per group and in total
share_used_method <- share_used_method[match(groups, share_used_method$group),] # sort by group
df_used_materials[,i] <- share_used_method
}
for (i in 1:length(vector_of_methods)){ # fill df with shares of material used by group
method <- vector_of_methods[i]
share_used_method <- aggregate(vector_of_methods[i] ~ group, data=subset_of_interest, mean, na.rm = TRUE) # gives share of students who used physical scripts per group and in total
share_used_method <- share_used_method[match(groups, share_used_method$group),] # sort by group
df_used_materials[,i] <- share_used_method
}
subset_of_interest
vector_of_methods[i]
share_used_method <- aggregate(used_script_digital ~ group, data=subset_of_interest, mean, na.rm = TRUE) # gives share of students who used physical scripts per group and in total
share_used_method <- aggregate(used_script_digital ~ group, data=subset_of_interest, mean, na.rm = TRUE) # gives share of students who used physical scripts per group and in total
share_used_method <- aggregate("used_script_digital" ~ group, data=subset_of_interest, mean, na.rm = TRUE)
share_used_method <- aggregate(vector_of_methods[1] ~ group, data=subset_of_interest, mean, na.rm = TRUE)
share_used_method <- aggregate(as.factor(vector_of_methods[1]) ~ group, data=subset_of_interest, mean, na.rm = TRUE)
share_used_method <- aggregate(get(vector_of_methods[1]) ~ group, data=subset_of_interest, mean, na.rm = TRUE)
share_used_method
share_used_method <- aggregate(used_script_digital ~ group, data=subset_of_interest, mean, na.rm = TRUE)
share_used_method
?get
get("test")
test <- "test"
get(test)
share_used_method <- aggregate("used_script_digital" ~ group, data=subset_of_interest, mean, na.rm = TRUE)
get(vector_of_methods[1])
get("my_object")
test
get("test")
get(test)
str(get("test"))
str(test)
share_used_method <- aggregate(get(vector_of_methods[i]) ~ group, data=subset_of_interest, mean, na.rm = TRUE) # gives share of students who used physical scripts per group and in total
for (i in 1:length(vector_of_methods)){ # fill df with shares of material used by group
method <- vector_of_methods[i]
share_used_method <- aggregate(get(vector_of_methods[i]) ~ group, data=subset_of_interest, mean, na.rm = TRUE) # gives share of students who used physical scripts per group and in total
share_used_method <- share_used_method[match(groups, share_used_method$group),] # sort by group
df_used_materials[,i] <- share_used_method
}
vector_of_methods <- c("used_script_digital", "used_script_physical", "used_textbook", "used_guideline",
"used_anki_institute", "used_anki_custom") # declare variables for line graph
#options ignored: moodle quiz, moodle task, other
subset_of_interest <- survey_data[c("group", vector_of_methods)]
df_used_materials <- as.data.frame(matrix(nrow = length(groups), ncol = length(vector_of_methods)))
colnames(df_used_materials) <- vector_of_methods
rownames(df_used_materials) <- groups # creates df with columns for used studying methods and rows for groups
for (i in 1:length(vector_of_methods)){ # fill df with shares of material used by group
method <- vector_of_methods[i]
share_used_method <- aggregate(get(vector_of_methods[i]) ~ group, data=subset_of_interest, mean, na.rm = TRUE) # gives share of students who used physical scripts per group and in total
share_used_method <- share_used_method[match(groups, share_used_method$group),] # sort by group
df_used_materials[,i] <- share_used_method
}
df_used_materials
share_used_method
df_used_materials <- as.data.frame(matrix(nrow = length(groups), ncol = length(vector_of_methods)))
colnames(df_used_materials) <- vector_of_methods
rownames(df_used_materials) <- groups # creates df with columns for used studying methods and rows for groups
for (i in 1:length(vector_of_methods)){ # fill df with shares of material used by group
method <- vector_of_methods[i]
share_used_method <- aggregate(get(vector_of_methods[i]) ~ group, data=subset_of_interest, mean, na.rm = TRUE)[, 2] # gives share of students who used physical scripts per group and in total
share_used_method <- share_used_method[match(groups, share_used_method$group),] # sort by group
df_used_materials[,i] <- share_used_method
}
df_used_materials <- as.data.frame(matrix(nrow = length(groups), ncol = length(vector_of_methods)))
colnames(df_used_materials) <- vector_of_methods
rownames(df_used_materials) <- groups # creates df with columns for used studying methods and rows for groups
for (i in 1:length(vector_of_methods)){ # fill df with shares of material used by group
method <- vector_of_methods[i]
share_used_method <- aggregate(get(vector_of_methods[i]) ~ group, data=subset_of_interest, mean, na.rm = TRUE) # gives share of students who used physical scripts per group and in total
share_used_method <- share_used_method[match(groups, share_used_method$group),] # sort by group
df_used_materials[,i] <- share_used_method[, 2]
}
df_used_materials
midwest
df_used_materials
midwest
?melt
mpg
# convert data frame to long format to be usable in ggplot
df_used_materials["group"] <- rownames(df_used_materials)
df_used_materials
# convert data frame to long format to be usable in ggplot
cbind(group = rownames(df_used_materials), df_used_materials)
df_used_materials
#options ignored: moodle quiz, moodle task, other
subset_of_interest <- survey_data[c("group", vector_of_methods)]
df_used_materials <- as.data.frame(matrix(nrow = length(groups), ncol = length(vector_of_methods)))
colnames(df_used_materials) <- vector_of_methods
rownames(df_used_materials) <- groups # creates df with columns for used studying methods and rows for groups
for (i in 1:length(vector_of_methods)){ # fill df with shares of material used by group
method <- vector_of_methods[i]
share_used_method <- aggregate(get(vector_of_methods[i]) ~ group, data=subset_of_interest, mean, na.rm = TRUE) # gives share of students who used physical scripts per group and in total
share_used_method <- share_used_method[match(groups, share_used_method$group),] # sort by group
df_used_materials[,i] <- share_used_method[, 2]
}
df_used_materials
# convert data frame to long format to be usable in ggplot
cbind(group = rownames(df_used_materials), df_used_materials)
?reshape
####### install all required packages
required_packages <- c("gt", "readxl","tidyverse", "grDevices", "ggpubr", "effsize", "superb", "nlme", "reshape2")
installed_packages <- required_packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(required_packages[!installed_packages])
}
invisible(lapply(required_packages, library, character.only = TRUE))
survey_data <- tibble(read_xlsx("data/processed/anki_data_comprehensive.xlsx")) # read survey data with all five groups
students_per_group <- c(196, 107, 111, 266, 232) # number of students who wrote the exam in each group (excluding students absent from the exam). Data taken from score reports for each exam.
groups <- unique(survey_data$group) # vector of different groups
respondents <- table(survey_data$group)[groups] # create table of group frequencies and sort them by vector "groups". Otherwise, columns will be sorted by alphabet
response_rate <-  round(100*respondents/students_per_group, 2) # create table of response rates in percentages
gender_table <- table(survey_data$group, survey_data$gender)[groups,] # create table of declared gender per group (1 = male, 2 = female, 3 = diverse or not declared)
gender_undeclared <- respondents - rowSums(gender_table) # get no of students who did not declare gender in each group
gender_table[,3] <- gender_table[,3] + gender_undeclared # add no of undeclared genders per group to gender table. row "3" now comprises both students of answered diverse, or who did not answer the question at all.
score_percentages_means <- aggregate(score_percentage ~ group, data=survey_data, mean) # create df of mean score percentages by group
score_percentages_means_sorted <- score_percentages_means[match(groups, score_percentages_means$group), ]
score_percentages_sds <- aggregate(score_percentage ~ group, data=survey_data, sd) # create df of score percentage standard deviations by group
score_percentages_sds_sorted <- score_percentages_sds[match(groups, score_percentages_sds$group), ]
score_percentages_means_sds <- paste(round(score_percentages_means_sorted[,2], 2), "\u00B1", round(score_percentages_sds_sorted[,2], 2)) # paste means +/- sds after rounding to 2 digits
descriptive_df <- data.frame(respondents = as.vector(respondents), # create data frame with all important descriptive data
response_rate = as.vector(response_rate),
score_percentages_means = score_percentages_means_sorted[, 2],
score_percentages_sds = score_percentages_sds_sorted[, 2],
as.data.frame.matrix(gender_table))
descriptive_df["totals", ] <- c(sum(respondents), # add bottom row with totals over all seminar and lecture exams
100 * sum(respondents) / sum(students_per_group),
mean(survey_data$score_percentage, na.rm = TRUE),
sd(survey_data$score_percentage, na.rm = TRUE),
sum(survey_data$gender == 1, na.rm = TRUE),
sum(survey_data$gender == 2, na.rm = TRUE),
sum(respondents) - sum(survey_data$gender == 1, na.rm = TRUE) -
sum(survey_data$gender == 2, na.rm = TRUE)
)
score_percentages_means_sds <- paste(round(c(score_percentages_means_sorted[,2],mean(survey_data$score_percentage, na.rm = TRUE)), 2),
"\u00B1",
round(c(score_percentages_sds_sorted[,2],sd(survey_data$score_percentage, na.rm = TRUE)), 2)) # paste means +/- sds after rounding to 2 digits
descriptive_df_processed <- descriptive_df[,-c(3,4)] # percentage means and sds converted to char and combined as mean +- sd
descriptive_df_processed$means_and_sds <- score_percentages_means_sds
descriptive_df_processed$response_rate <- round(descriptive_df_processed$response_rate, 2)
rownames(descriptive_df_processed) <- c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023", "Totals")
descriptive_tbl <- as_tibble(cbind(nms = names(descriptive_df_processed), t(descriptive_df_processed))) # transpose and convert to tibble object
row_names <- c("Respondents [n]", "Response rate [%]", "Male", "Female", "Non-binary or refused to disclose", "Mean percentage of correct anwers [%] \u00B1 standard deviation") # expressive row names esp. for gender options
descriptive_tbl$nms = row_names # fill first column in descriptive_tbl with row names
descriptive_tbl_gt <- gt(descriptive_tbl, rowname_col = "nms") # create gt object with $nms as row names
indented_rows <- c("Male", "Female", "Non-binary or refused to disclose") # define rows to be indented (gender rows)
descriptive_tbl_gt <- tab_row_group(descriptive_tbl_gt, label = "Gender",  rows = indented_rows) # create gt_tbl object, label Gender rows for grouping and indenting
descriptive_tbl_gt <- tab_stub_indent(descriptive_tbl_gt, rows= indented_rows, indent = 3) # indent Gender rows
descriptive_tbl_gt <- row_group_order(descriptive_tbl_gt, groups = c(NA, "Gender")) # reorder groups with Gender being on the bottom
tab_header(descriptive_tbl_gt, "Subject characteristics")
descriptive_tbl_gt <- tab_style( # make column total in bold
descriptive_tbl_gt,
style = cell_text(weight = "bold"),
locations = cells_body(columns = Totals)
)
descriptive_tbl_gt <- tab_style( # make column name "Totals" in bold as well
descriptive_tbl_gt,
style = cell_text(weight = "bold"),
locations = cells_column_labels(columns = Totals)
)
descriptive_tbl_gt <- tab_style( # make column name "Totals" in bold as well
descriptive_tbl_gt,
style = cell_text(weight = "bold"),
locations = cells_column_labels(columns = Totals)
)
descriptive_tbl_gt <- tab_style( # make column total in bold
descriptive_tbl_gt,
style = cell_text(weight = "bold"),
locations = cells_body(columns = Totals)
)
descriptive_tbl_gt <- tab_style( # make column name "Totals" in bold as well
descriptive_tbl_gt,
style = cell_text(weight = "bold"),
locations = cells_column_labels(columns = Totals)
)
descriptive_tbl_gt <- tab_style( # make column total in bold
descriptive_tbl_gt,
style = cell_text(weight = "bold"),
locations = cells_body(columns = "Totals")
)
descriptive_tbl_gt
vector_of_methods <- c("used_script_digital", "used_script_physical", "used_textbook", "used_guideline",
"used_anki_institute", "used_anki_custom") # declare variables for line graph
#options ignored: moodle quiz, moodle task, other
subset_of_interest <- survey_data[c("group", vector_of_methods)]
df_used_materials <- as.data.frame(matrix(nrow = length(groups), ncol = length(vector_of_methods)))
colnames(df_used_materials) <- vector_of_methods
rownames(df_used_materials) <- groups # creates df with columns for used studying methods and rows for groups
for (i in 1:length(vector_of_methods)){ # fill df with shares of material used by group
method <- vector_of_methods[i]
share_used_method <- aggregate(get(vector_of_methods[i]) ~ group, data=subset_of_interest, mean, na.rm = TRUE) # gives share of students who used physical scripts per group and in total
share_used_method <- share_used_method[match(groups, share_used_method$group),] # sort by group
df_used_materials[,i] <- share_used_method[, 2]
}
# convert data frame to long format to be usable in ggplot
df_used_materials <- cbind(group = rownames(df_used_materials), df_used_materials) # create rownames as expressive data column
df_used_materials_reshaped <- reshape(data = df_used_materials,
direction = "long",
varying = list(names(df_used_materials)[-1]),
idvar = names(df_used_materials)[1],
times = names(df_used_materials)[-1],
timevar = "method_used",
v.names = "share")
figure <- ggplot(data=df_used_materials_reshaped, aes(x=factor(group), y=share))
figure + geom_point(aes(color = method_used), size = 2) +
geom_line(aes(group = method_used))
figure + geom_line(aes(color = method_used))
geom_point(aes(color = study_material), size = 2)+
expand_limits(y = c(0, 100))+
theme_bw()+
labs(color  = "preferred study material", linetype = "preferred study material",
x = "group", y = " Usage (% of students in each group)") +
ggtitle("Preferred study material by group")
figure <- ggplot(data=df_used_materials_reshaped, aes(x=factor(group), y=share))
figure + geom_point(aes(color = method_used), size = 2) +
geom_line(aes(group = method_used))
figure + geom_line(aes(color = method_used))
figure + geom_point(aes(color = method_used), size = 2) +
geom_line(aes(group = method_used))
test <- c(1,2,3,4,5)
test[c(-1, -2)]
test[test == 2]
5 ||> mean()
5 |> mean()
c(5, 6) |> mean()
cat("'hi'")
?cat
cat('"hi"')
cat(""hi"")
print("'hi'")
print('"hi"')
print(hallo)
print("hallo")
"'hi'"
'"hi"'
8 -> Sal
Sal
Sal <- 8 -> Mangia
Sal
Mangia
test = TRUE
as.numeric(test)
as.logical(test)
as.factor(test)
as.logical(as.factor(test))
test <- c(1,2,6,4,7)
rank(test)
matrix(test)
matrix(test, nrow = 2, ncol = 5)
matrix(test, nrow = 2, ncol = 1)
test = c(1,2,3,4)
test
matrix(test, nrow = 2, ncol = 1)
length(test)
matrix(test, nrow = 2, ncol = 2)
matrix(test, nrow = 2, ncol = 3)
l['y']
l <- list(x = 1:5, y = c('a', 'b'))
l
l['y']
l[[2]]
l[1]
l[2]
l[[1]]
l[[2]]
class(l[1])
class(l[[1]])
l[[1]]
str(l[1])
str(l[[1]])
l <- list(1)
l
figure <- ggplot(data=df_used_materials_reshaped, aes(x=as.factor(group), y=share))
figure + geom_point(aes(color = method_used), size = 2) +
geom_line(aes(group = method_used))
?x_axis_discrete
?scale_x_discrete
gruop
group
groups
figure <- ggplot(data=df_used_materials_reshaped, aes(x=as.factor(group), y=share))
figure + geom_point(aes(color = method_used), size = 2) +
geom_line(aes(group = method_used)) +
scale_x_discrete(limits = groups)
figure + geom_line(aes(color = method_used))
geom_point(aes(color = study_material), size = 2)+
expand_limits(y = c(0, 100))+
theme_bw()+
labs(color  = "preferred study material", linetype = "preferred study material",
x = "group", y = " Usage (% of students in each group)") +
ggtitle("Preferred study material by group")
figure <- ggplot(data=df_used_materials_reshaped, aes(x=as.factor(group), y=share))
figure + geom_point(aes(color = method_used), size = 2) +
geom_line(aes(group = method_used)) +
scale_x_discrete(limits = groups)
?geom_point
figure <- ggplot(data=df_used_materials_reshaped, aes(x=as.factor(group), y=share))
figure + geom_point(aes(shape = method_used), size = 2) +
geom_line(aes(group = method_used)) +
scale_x_discrete(limits = groups)
figure + geom_line(aes(color = method_used))
figure <- ggplot(data=df_used_materials_reshaped, aes(x=as.factor(group), y=share))
figure + geom_point(aes(shape = method_used), size = 2) +
geom_line(aes(group = method_used)) +
scale_x_discrete(limits = groups) +
geom_line(aes(color = method_used))
figure <- ggplot(data=df_used_materials_reshaped, aes(x=as.factor(group), y=share))
figure + geom_point(aes(shape = method_used), size = 2) +
geom_line(aes(group = method_used)) +
scale_x_discrete(limits = groups) +
geom_line(aes(color = group))
figure <- ggplot(data=df_used_materials_reshaped, aes(x=as.factor(group), y=share))
figure + geom_point(aes(shape = method_used), size = 2) +
geom_line(aes(group = method_used)) +
scale_x_discrete(limits = groups)
####### install all required packages
required_packages <- c("gt", "readxl","tidyverse", "grDevices", "ggpubr", "effsize", "superb", "nlme", "reshape2")
installed_packages <- required_packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(required_packages[!installed_packages])
}
invisible(lapply(required_packages, library, character.only = TRUE))
survey_data <- tibble(read_xlsx("data/processed/anki_data_comprehensive.xlsx")) # read survey data with all five groups
names(survey_data)[names(survey_data) == "group"] <- "exam" # rename "group" to "exam" to avoid collisions in ggplot2
students_per_group <- c(196, 107, 111, 266, 232) # number of students who wrote the exam in each group (excluding students absent from the exam). Data taken from score reports for each exam.
groups <- unique(survey_data$exam) # vector of different groups
respondents <- table(survey_data$exam)[groups] # create table of group frequencies and sort them by vector "groups". Otherwise, columns will be sorted by alphabet
response_rate <-  round(100*respondents/students_per_group, 2) # create table of response rates in percentages
gender_table <- table(survey_data$exam, survey_data$gender)[groups,] # create table of declared gender per group (1 = male, 2 = female, 3 = diverse or not declared)
gender_undeclared <- respondents - rowSums(gender_table) # get no of students who did not declare gender in each group
gender_table[,3] <- gender_table[,3] + gender_undeclared # add no of undeclared genders per group to gender table. row "3" now comprises both students of answered diverse, or who did not answer the question at all.
score_percentages_means <- aggregate(score_percentage ~ exam, data=survey_data, mean) # create df of mean score percentages by group
score_percentages_means_sorted <- score_percentages_means[match(groups, score_percentages_means$exam), ]
score_percentages_sds <- aggregate(score_percentage ~ exam, data=survey_data, sd) # create df of score percentage standard deviations by group
score_percentages_sds_sorted <- score_percentages_sds[match(groups, score_percentages_sds$exam), ]
score_percentages_means_sds <- paste(round(score_percentages_means_sorted[,2], 2), "\u00B1", round(score_percentages_sds_sorted[,2], 2)) # paste means +/- sds after rounding to 2 digits
descriptive_df <- data.frame(respondents = as.vector(respondents), # create data frame with all important descriptive data
response_rate = as.vector(response_rate),
score_percentages_means = score_percentages_means_sorted[, 2],
score_percentages_sds = score_percentages_sds_sorted[, 2],
as.data.frame.matrix(gender_table))
descriptive_df["totals", ] <- c(sum(respondents), # add bottom row with totals over all seminar and lecture exams
100 * sum(respondents) / sum(students_per_group),
mean(survey_data$score_percentage, na.rm = TRUE),
sd(survey_data$score_percentage, na.rm = TRUE),
sum(survey_data$gender == 1, na.rm = TRUE),
sum(survey_data$gender == 2, na.rm = TRUE),
sum(respondents) - sum(survey_data$gender == 1, na.rm = TRUE) -
sum(survey_data$gender == 2, na.rm = TRUE)
)
score_percentages_means_sds <- paste(round(c(score_percentages_means_sorted[,2],mean(survey_data$score_percentage, na.rm = TRUE)), 2),
"\u00B1",
round(c(score_percentages_sds_sorted[,2],sd(survey_data$score_percentage, na.rm = TRUE)), 2)) # paste means +/- sds after rounding to 2 digits
descriptive_df_processed <- descriptive_df[,-c(3,4)] # percentage means and sds converted to char and combined as mean +- sd
descriptive_df_processed$means_and_sds <- score_percentages_means_sds
descriptive_df_processed$response_rate <- round(descriptive_df_processed$response_rate, 2)
rownames(descriptive_df_processed) <- c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023", "Totals")
descriptive_tbl <- as_tibble(cbind(nms = names(descriptive_df_processed), t(descriptive_df_processed))) # transpose and convert to tibble object
row_names <- c("Respondents [n]", "Response rate [%]", "Male", "Female", "Non-binary or refused to disclose", "Mean percentage of correct anwers [%] \u00B1 standard deviation") # expressive row names esp. for gender options
descriptive_tbl$nms = row_names # fill first column in descriptive_tbl with row names
descriptive_tbl_gt <- gt(descriptive_tbl, rowname_col = "nms") # create gt object with $nms as row names
indented_rows <- c("Male", "Female", "Non-binary or refused to disclose") # define rows to be indented (gender rows)
descriptive_tbl_gt <- tab_row_group(descriptive_tbl_gt, label = "Gender",  rows = indented_rows) # create gt_tbl object, label Gender rows for grouping and indenting
descriptive_tbl_gt <- tab_stub_indent(descriptive_tbl_gt, rows= indented_rows, indent = 3) # indent Gender rows
descriptive_tbl_gt <- row_group_order(descriptive_tbl_gt, groups = c(NA, "Gender")) # reorder groups with Gender being on the bottom
tab_header(descriptive_tbl_gt, "Subject characteristics")
descriptive_tbl_gt <- tab_style( # make column total in bold
descriptive_tbl_gt,
style = cell_text(weight = "bold"),
locations = cells_body(columns = "Totals")
)
descriptive_tbl_gt <- tab_style( # make column name "Totals" in bold as well
descriptive_tbl_gt,
style = cell_text(weight = "bold"),
locations = cells_column_labels(columns = Totals)
)
descriptive_tbl_gt
vector_of_methods <- c("used_script_digital", "used_script_physical", "used_textbook", "used_guideline",
"used_anki_institute", "used_anki_custom") # declare variables for line graph
#options ignored: moodle quiz, moodle task, other
subset_of_interest <- survey_data[c("exam", vector_of_methods)]
df_used_materials <- as.data.frame(matrix(nrow = length(groups), ncol = length(vector_of_methods)))
colnames(df_used_materials) <- vector_of_methods
rownames(df_used_materials) <- groups # creates df with columns for used studying methods and rows for groups
for (i in 1:length(vector_of_methods)){ # fill df with shares of material used by group
method <- vector_of_methods[i]
share_used_method <- aggregate(get(vector_of_methods[i]) ~ exam, data=subset_of_interest, mean, na.rm = TRUE) # gives share of students who used physical scripts per group and in total
share_used_method <- share_used_method[match(groups, share_used_method$exam),] # sort by group
df_used_materials[,i] <- share_used_method[, 2]
}
# convert data frame to long format to be usable in ggplot
df_used_materials <- cbind(exam = rownames(df_used_materials), df_used_materials) # create rownames as expressive data column
# rename methods for aesthetic plot labels
colnames(df_used_materials) <- c(
"exam", "Digital script", "Physical script", "Textbooks", "Guidelines", "Anki institute cards", "Anki own cards")
df_used_materials_reshaped <- reshape(data = df_used_materials,
direction = "long",
varying = list(names(df_used_materials)[-1]),
idvar = names(df_used_materials)[1],
times = names(df_used_materials)[-1],
timevar = "method_used",
v.names = "share")
#plot
figure <- ggplot(data = df_used_materials_reshaped,
aes(x = exam, y = share, group = method_used, colour = method_used))
figure + geom_point(aes(shape = method_used), size = 3) +
<<<<<<< HEAD
#plot
figure <- ggplot(data = df_used_materials_reshaped,
aes(x = exam, y = share, group = method_used, colour = method_used))
figure + geom_point(aes(shape = method_used), size = 3) +
geom_line(aes(linetype = method_used), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 22", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
scale_fill_discrete(name = "materials used", labels = c("A", "B", "C", "D", "E", "F")) +
labs(title = "study material used in each group")
#plot
figure <- ggplot(data = df_used_materials_reshaped,
aes(x = exam, y = share, group = method_used, colour = method_used))
figure + geom_point(aes(shape = method_used), size = 3) +
geom_line(aes(linetype = method_used), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 22", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
scale_fill_discrete(name = "materials used", labels = c("A", "B", "C", "D", "E", "F")) +
labs(title = "study material used in each group")
geom_line(aes(linetype = method_used), size = 2) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 22", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw()
figure + geom_line(aes(group = method_used))
statesplot <- ggplot(df_used_materials_reshaped, aes(x = exam, y = share, group = method_used, colour = method_used)) +
geom_line(aes(linetype = method_used))
geom_point(aes(color = study_material), size = 2)+
expand_limits(y = c(0, 100))+
theme_bw()+
labs(titlecolor  = "preferred study material", linetype = "preferred study material",
x = "group", y = " Usage (% of students in each group)") +
ggtitle("Preferred study material by group")
figure + geom_line(aes(group = method_used))
#plot
figure <- ggplot(data = df_used_materials_reshaped,
aes(x = exam, y = share, group = method_used, colour = method_used))
figure + geom_point(aes(shape = method_used), size = 3) +
geom_line(aes(linetype = method_used), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 22", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
scale_fill_discrete(name = "materials used", labels = c("A", "B", "C", "D", "E", "F")) +
labs(title = "study material used in each group")
